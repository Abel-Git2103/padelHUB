{
  "name": "padel-hub-monorepo",
  "version": "0.0.0",
  "private": true,
  "workspaces": [
    "frontend",
    "backend",
    "shared"
  ],
  "scripts": {
    "servidor": "npm run install:all && npm run build:shared && npm run build:backend && concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "servidor:prod": "npm run install:all && npm run build:shared && npm run build:backend && cd backend && npm run start:prod",
    "servidor:setup": "npm run install:all && npm run build:shared && npm run build:backend",
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:frontend": "cd frontend && npm run start",
    "dev:backend": "cd backend && npm run start:dev",
    "dev:mcp": "cd mcp-server && npm run dev",
    "build": "npm run build:shared && npm run build:backend && npm run build:frontend",
    "build:shared": "cd shared && npm run build",
    "build:backend": "cd backend && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "build:mcp": "cd mcp-server && npm run build",
    "test": "npm run test:backend && npm run test:frontend",
    "test:backend": "cd backend && npm run test",
    "test:frontend": "cd frontend && npm run test",
    "test:e2e": "cd frontend && npm run e2e",
    "install:all": "npm install && cd frontend && npm install && cd ../backend && npm install && cd ../shared && npm install && cd ../mcp-server && npm install",
    "clean": "rimraf node_modules frontend/node_modules backend/node_modules shared/node_modules mcp-server/node_modules",
    "clean:build": "rimraf backend/dist frontend/dist shared/dist mcp-server/dist",
    "lint": "npm run lint:frontend && npm run lint:backend",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:backend": "cd backend && npm run lint",
    "config:check": "node -e \"console.log('=== Project Config ==='); console.log(JSON.stringify(require('./config/project.json'), null, 2)); console.log('\\n=== Environment Config ==='); console.log(JSON.stringify(require('./config/environment.json'), null, 2))\"",
    "config:paths": "node -e \"console.log(JSON.stringify(require('./config/paths.json'), null, 2))\"",
    "config:tools": "node -e \"console.log(JSON.stringify(require('./config/tools.json'), null, 2))\"",
    "config:validate": "node config/validate.js",
    "setup:dev": "npm run install:all && npm run build:shared && npm run config:check",
    "setup:project": "npm run setup:dev && npm run build && npm run test",
    "analyze:bundle": "cd frontend && node tools/analysis/bundle-analyzer.js",
    "analyze:deps": "cd frontend && npx madge --image graph.svg src/",
    "analyze:metrics": "cd backend && npx ts-node scripts/analyze-metrics.ts",
    "docs:api": "node scripts/generate-api-docs.js",
    "docs:api:watch": "nodemon --exec \"npm run docs:api\" --ext js,ts --ignore dist/"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "rimraf": "^5.0.5",
    "typescript": "~5.8.2"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "dependencies": {
    "axios": "^1.11.0"
  }
}
