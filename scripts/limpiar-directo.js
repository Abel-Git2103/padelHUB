/**
 * Script para limpiar restricciones problem√°ticas directamente en MongoDB
 */

const mongoose = require('mongoose');

async function limpiarRestricionesDirecto() {
  try {
    // Conectar a MongoDB
    await mongoose.connect('mongodb://localhost:27017/padelhub');
    console.log('üîó Conectado a MongoDB');
    
    // Primero buscar cualquier club
    const clubs = await mongoose.connection.db.collection('clubs').find({}).toArray();
    console.log(`üìã Encontrados ${clubs.length} clubes en la base de datos`);
    
    if (clubs.length === 0) {
      console.log('‚ùå No hay clubes en la base de datos');
      return;
    }
    
    // Si no existe Club P√°del Elite Madrid, usar el primer club
    let targetClub = clubs.find(c => c.name === 'Club P√°del Elite Madrid');
    if (!targetClub) {
      targetClub = clubs[0];
      console.log(`‚ö†Ô∏è Club P√°del Elite Madrid no encontrado, usando: ${targetClub.name}`);
    }
    
    console.log(`üéØ Limpiando restricciones del club: ${targetClub.name}`);
    
    // Mostrar estado actual
    console.log('üìä Estado actual:', {
      activeRestrictions: targetClub.restrictions?.activeRestrictions?.length || 0,
      restrictionsHistory: targetClub.restrictions?.restrictionsHistory?.length || 0
    });
    
    // Actualizar el club
    const result = await mongoose.connection.db.collection('clubs').updateOne(
      { _id: targetClub._id },
      {
        $set: {
          'restrictions.isRestricted': false,
          'restrictions.activeRestrictions': [],
          'restrictions.restrictionsSummary': [],
          'restrictions.restrictionsHistory': [] // Limpiar el historial problem√°tico
        }
      }
    );
    
    console.log('‚úÖ Restricciones limpiadas:', result.modifiedCount, 'documentos actualizados');
    
  } catch (error) {
    console.error('‚ùå Error:', error);
  } finally {
    await mongoose.disconnect();
  }
}

limpiarRestricionesDirecto();
